version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: idoze
      POSTGRES_USER: idoze_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U idoze_user -d idoze"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://idoze_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/idoze
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-super-secret-nextauth-secret-key-here}
      - NEXTAUTH_URL=http://140.238.156.90
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - MAX_CLASS_CAPACITY=${MAX_CLASS_CAPACITY:-40}
      - UTILIZATION_TARGET=${UTILIZATION_TARGET:-50}
      - MISSED_CLASS_NOTIFICATION_DAYS=${MISSED_CLASS_NOTIFICATION_DAYS:-14}
      - BOOKING_DEADLINE_HOURS=${BOOKING_DEADLINE_HOURS:-2}
      - CANCELLATION_DEADLINE_HOURS=${CANCELLATION_DEADLINE_HOURS:-4}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    expose:
      - "3000"

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge